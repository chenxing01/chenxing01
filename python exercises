Question 1
Question:
Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5,
between 2000 and 3200 (both included).
The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints: 
Consider use range(#begin, #end) method

Solution:
list=[]
for i in range(2000,3201):
    if i%7==0 and i%5!=0:
        list.append(i)
print(list)

Question 2
Question:
Write a program which can compute the factorial of a given numbers.
The results should be printed in a comma-separated sequence on a single line.
Suppose the following input is supplied to the program:
8
Then, the output should be:
40320

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
#使用for循环
number=input()
number=int(number)
result=1
if number<0:
    print("你输入的数字有误")
elif number==0:
    print("0的阶乘为1")
else:
    for i in range(1,number+1):
        result*=i
        print(result)
        
#使用factorial函数
number=input()
number=int(number)
result=math.factorial(number)
print(result)

#使用递归
def fact(number):
    if number==0:
        return 1
    else:
        return number*fact((number-1))
x=int(input())
print(fact(x))

Question 3
Question:
With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.
Suppose the following input is supplied to the program:
8
Then, the output should be:
{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
Consider use dict()

Solution:
n=(int)(input())
d={}
for i in range(1,n+1):
    d[i]=i*i
print(d)

Question 4
Question:
Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.
Suppose the following input is supplied to the program:
34,67,55,33,12,98
Then, the output should be:
['34', '67', '55', '33', '12', '98']
('34', '67', '55', '33', '12', '98')

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
tuple() method can convert list to tuple

Solution:
i=input()
list=i.split(",")
print(list,tuple(list))

Question 5
Question:
Define a class which has at least two methods:
getString: to get a string from console input
printString: to print the string in upper case.
Also please include simple test function to test the class methods.

Hints:
Use __init__ method to construct some parameters

Solution:
class StringOpe:
    def __init__(self):
        self.s=""
    def get_string(self):
        self.s=input()
    def print_string(self):
        print(self.s.upper())
hello=StringOpe()
hello.get_string()
hello.print_string()

Question 6
Question:
Write a program that calculates and prints the value according to the given formula:
Q = Square root of [(2 * C * D)/H]
Following are the fixed values of C and H:
C is 50. H is 30.
D is the variable whose values should be input to your program in a comma-separated sequence.
Example
Let us assume the following comma separated input sequence is given to the program:
100,150,180
The output of the program should be:
18,22,24

Hints:
If the output received is in decimal form, it should be rounded off to its nearest value (for example, if the output received is 26.0, it should be printed as 26)
In case of input data being supplied to the question, it should be assumed to be a console input. 

Solution:
import math
C=50
H=30
D=input()
list=D.split(",")
result=[]
for i in list:
    Q=str(round(math.sqrt(2 * C * float(i)/H)))
    result.append(Q)
print(",".join(result))
# round（x，n）方法将返回x的值，该值四舍五入到小数点后的n位数字。默认的小数位数为 0，表示该函数将返回最接近的整数。
# join() 方法，它是 split() 方法的逆方法，它会将列表（或元组）中多个字符串采用固定的分隔符连接在一起。

Question 7
Question:
Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.
Note: i=0,1,……,X-1; j=0,1,……,Y-1.
Example
Suppose the following inputs are given to the program:
3,5
Then, the output of the program should be:
[[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]] 

Hints:
Note: In case of input data being supplied to the question, it should be assumed to be a console input in a comma-separated form.

Solution:
x=int(input("请输入x： "))
y=int(input("请输入y： "))
list=[[0 for i in range(y)] for j in range(x)]
for i in range(x):
    for j in range(y):
        list[i][j]=i*j
print(list)
# list=[[0 for i in range(y)] for j in range(x)]?

Question 8
Question:
Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.
Suppose the following input is supplied to the program:
without,hello,bag,world
Then, the output should be:
bag,hello,without,world

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
words=input()
list=words.split(",")
list=sorted(list)
print(",".join(list))

Question 9
Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.
Suppose the following input is supplied to the program:
Hello world
Practice makes perfect
Then, the output should be:
HELLO WORLD
PRACTICE MAKES PERFECT

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;
for sentence in lines:
    print(sentence)
# while True无限循环

Question 10
Question:
Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.
Suppose the following input is supplied to the program:
hello world and practice makes perfect and hello world again
Then, the output should be:
again and hello makes perfect practice world

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
We use set container to remove duplicated data automatically and then use sorted() to sort the data.

Solution:
words=input()
list=words.split(" ")
li=[]
for i in range(len(list)-1):
    if list[i] not in li:
        li.append(list[i])
print(" ".join(li))
# 创建一个新的列表，添加元素

Question 11
Question:
Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.
Example:
0100,0011,1010,1001
Then the output should be:
1010
Notes: Assume the data is input by console.

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
number=input()
list=number.split(",")
li=[]
for i in list:
    inti=int(i,2)
    if inti%5==0:
        li.append(i)
print(",".join(li))

Question 12
Question:
Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.
The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
list=[]
for i in range(1000,3001):
    s=str(i)
    if(int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and(int(s[3])%2==0):
        list.append(str(i))
print(",".join(list))     

Question 13
Question:
Write a program that accepts a sentence and calculate the number of letters and digits.
Suppose the following input is supplied to the program:
hello world! 123
Then, the output should be:
LETTERS 10
DIGITS 3

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
sentence=input()
num_letter=0
num_digit=0
for i in sentence:
    if i.isdigit():
        num_digit+=1
    elif i.isalpha():
        num_letter+=1
    else:
        continue
print("LETTERS",num_letter,"DIGITS",num_digit)

Question 14
Question:
Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.
Suppose the following input is supplied to the program:
Hello world!
Then, the output should be:
UPPER CASE 1
LOWER CASE 9

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
sentence=input()
num_upper=0
num_lower=0
for i in sentence:
    if i.isupper():
        num_upper+=1
    elif i.islower():
        num_lower+=1
    else:
        continue
print("UPPER CASE",num_upper,"LOWER CASE",num_lower)

Question 15
Question:
Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.
Suppose the following input is supplied to the program:
9
Then, the output should be:
11106

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
a=int(input())
b=10*a+a
c=100*a+10*a+a
d=1000*a+100*a+10*a+a
print(a+b+c+d)

# 占位符%s
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)

Question 16
Question:
Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.
Suppose the following input is supplied to the program:
1,2,3,4,5,6,7,8,9
Then, the output should be:
1,3,5,7,9

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
value=input()
list=value.split(",")
li=[]
for i in list:
    if int(i)%2!=0:
        li.append(i)
print(",".join(li))

Question 17
Question:
Write a program that computes the net amount of a bank account based a transaction log from console input. The transaction log format is shown as following:
D 100
W 200

D means deposit while W means withdrawal.
Suppose the following input is supplied to the program:
D 300
D 300
W 200
D 100
Then, the output should be:
500

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
netAmount = 0
while True:
    s = input()
    if not s:
        break
    value = s.split(" ")
    operation = value[0]
    amount = int(value[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
# if not s?

Question 18
Question:
A website requires the users to input username and password to register. Write a program to check the validity of password input by users.
Following are the criteria for checking the password:
1. At least 1 letter between [a-z]
2. At least 1 number between [0-9]
1. At least 1 letter between [A-Z]
3. At least 1 character from [$#@]
4. Minimum length of transaction password: 6
5. Maximum length of transaction password: 12
Your program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma.
Example
If the following passwords are given as input to the program:
ABd1234@1,a F1#,2w3E*,2We3345
Then, the output of the program should be:
ABd1234@1

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
import re
password=input("请输入密码：")
list=password.split(",")
li=[]
for i in list:
    if len(i)<6 or len(i)>12:
        continue
    if not re.search("[a-z]",i):
        continue
    elif not re.search("[0-9]",i):
        continue
    elif not re.search("[A-Z]",i):
        continue
    elif not re.search("[$#@]",i):
        continue
    else:
        pass
    li.append(i)
print (",".join(li))
# re.search() 匹配整个字符串，并返回第一个成功的匹配。如果匹配失败，则返回None。

Question 19
Question:
You are required to write a program to sort the (name, age, height) tuples by ascending order where name is string, age and height are numbers. The tuples are input by console. The sort criteria is:
1: Sort based on name;
2: Then sort based on age;
3: Then sort by score.
The priority is that name > age > score.
If the following tuples are given as input to the program:
Tom,19,80
John,20,90
Jony,17,91
Jony,17,93
Json,21,85
Then, the output of the program should be:
[('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.
We use itemgetter to enable multiple sort keys.

Solutions:
from operator import itemgetter,attrgetter
list=[]
while True:
    value=input("请分别输入姓名，年龄，分数： ")
    if not value:
        break
    t=tuple(value.split(","))
    list.append(t)
print(sorted(list,key=itemgetter(0,1,2)))
# operator.itemgetter函数主要用于获取某一对象特定维度的数据，其中的参数为特定维度的序号
  a=[1,2,3,4]
  b=operator.itemgetter(1) #获取下标为1的元素
  b(a)
# 利用operator.itemgetter排序
    a=[('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)]
>>> sorted(a, key=operator.itemgetter(1,2)) #先按照元组中下标为1的值对对象排序，当下标为1的值相同时，再按照下标2来排序
[('john', 'A', 15), ('dave', 'B', 10), ('jane', 'B', 12)]
>>> sorted(a, key=operator.itemgetter(1,2), reverse=True) #从大到小
[('jane', 'B', 12), ('dave', 'B', 10), ('john', 'A', 15)]
>>> sorted(a, key=operator.itemgetter(2), reverse=True) #仅仅按照元组中下标为2的值对对象排序，从大到小。
[('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)]

Question 20
Question:
Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.

Hints:
Consider use yield

Solution:

